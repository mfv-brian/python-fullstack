"""enhance_multi_tenant_schema_with_indexes

Revision ID: 00ca649b4bd9
Revises: 0b06a0bd3723
Create Date: 2025-07-08 04:05:55.362139

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '00ca649b4bd9'
down_revision = '0b06a0bd3723'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tenant_metrics',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('user_count', sa.Integer(), nullable=False),
    sa.Column('item_count', sa.Integer(), nullable=False),
    sa.Column('audit_log_count', sa.Integer(), nullable=False),
    sa.Column('storage_used_mb', sa.Float(), nullable=False),
    sa.Column('active_users', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_tenant_metrics_date', 'tenant_metrics', ['tenant_id', 'date'], unique=False)
    op.create_index(op.f('ix_tenant_metrics_date'), 'tenant_metrics', ['date'], unique=False)
    op.create_index(op.f('ix_tenant_metrics_tenant_id'), 'tenant_metrics', ['tenant_id'], unique=False)
    op.create_table('audit_log',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('action', sa.Enum('CREATE', 'UPDATE', 'DELETE', 'VIEW', 'SEARCH', name='auditaction'), nullable=False),
    sa.Column('resource_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('resource_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('before_state', sa.JSON(), nullable=True),
    sa.Column('after_state', sa.JSON(), nullable=True),
    sa.Column('custom_metadata', sa.JSON(), nullable=True),
    sa.Column('severity', sa.Enum('INFO', 'WARNING', 'ERROR', 'CRITICAL', name='auditseverity'), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('session_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_tenant_action', 'audit_log', ['tenant_id', 'action'], unique=False)
    op.create_index('idx_audit_tenant_resource', 'audit_log', ['tenant_id', 'resource_type', 'resource_id'], unique=False)
    op.create_index('idx_audit_tenant_severity', 'audit_log', ['tenant_id', 'severity'], unique=False)
    op.create_index('idx_audit_tenant_timestamp', 'audit_log', ['tenant_id', 'timestamp'], unique=False)
    op.create_index('idx_audit_tenant_timestamp_partition', 'audit_log', ['tenant_id', 'timestamp'], unique=False)
    op.create_index('idx_audit_tenant_user', 'audit_log', ['tenant_id', 'user_id'], unique=False)
    op.create_index('idx_audit_timestamp_partition', 'audit_log', ['timestamp'], unique=False)
    op.create_index(op.f('ix_audit_log_action'), 'audit_log', ['action'], unique=False)
    op.create_index(op.f('ix_audit_log_ip_address'), 'audit_log', ['ip_address'], unique=False)
    op.create_index(op.f('ix_audit_log_resource_id'), 'audit_log', ['resource_id'], unique=False)
    op.create_index(op.f('ix_audit_log_resource_type'), 'audit_log', ['resource_type'], unique=False)
    op.create_index(op.f('ix_audit_log_session_id'), 'audit_log', ['session_id'], unique=False)
    op.create_index(op.f('ix_audit_log_severity'), 'audit_log', ['severity'], unique=False)
    op.create_index(op.f('ix_audit_log_tenant_id'), 'audit_log', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_audit_log_timestamp'), 'audit_log', ['timestamp'], unique=False)
    op.create_index(op.f('ix_audit_log_user_id'), 'audit_log', ['user_id'], unique=False)
    op.drop_table('auditlog')
    op.add_column('item', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('item', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.add_column('item', sa.Column('tenant_id', sa.Uuid(), nullable=False))
    op.alter_column('item', 'description',
               existing_type=sa.VARCHAR(length=255),
               type_=sqlmodel.sql.sqltypes.AutoString(length=1000),
               existing_nullable=True)
    op.create_index('idx_item_tenant_created', 'item', ['tenant_id', 'created_at'], unique=False)
    op.create_index('idx_item_tenant_owner', 'item', ['tenant_id', 'owner_id'], unique=False)
    op.create_index('idx_item_title_tenant', 'item', ['title', 'tenant_id'], unique=False)
    op.create_index(op.f('ix_item_created_at'), 'item', ['created_at'], unique=False)
    op.create_index(op.f('ix_item_owner_id'), 'item', ['owner_id'], unique=False)
    op.create_index(op.f('ix_item_tenant_id'), 'item', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_item_title'), 'item', ['title'], unique=False)
    op.create_index(op.f('ix_item_updated_at'), 'item', ['updated_at'], unique=False)
    op.drop_constraint('item_owner_id_fkey', 'item', type_='foreignkey')
    op.create_foreign_key(None, 'item', 'user', ['owner_id'], ['id'])
    op.create_foreign_key(None, 'item', 'tenant', ['tenant_id'], ['id'])
    op.add_column('tenant', sa.Column('max_users', sa.Integer(), nullable=False))
    op.add_column('tenant', sa.Column('max_storage_gb', sa.Integer(), nullable=False))
    op.add_column('tenant', sa.Column('features_enabled', sa.JSON(), nullable=False))
    op.create_index('idx_tenant_code_status', 'tenant', ['code', 'status'], unique=False)
    op.create_index('idx_tenant_status_created', 'tenant', ['status', 'created_at'], unique=False)
    op.create_index(op.f('ix_tenant_created_at'), 'tenant', ['created_at'], unique=False)
    op.create_index(op.f('ix_tenant_name'), 'tenant', ['name'], unique=False)
    op.create_index(op.f('ix_tenant_status'), 'tenant', ['status'], unique=False)
    op.add_column('user', sa.Column('last_login_at', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('login_count', sa.Integer(), nullable=False))
    op.alter_column('user', 'tenant_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_index('ix_user_email', table_name='user')
    op.create_index('idx_user_last_login', 'user', ['last_login_at'], unique=False)
    op.create_index('idx_user_tenant_active', 'user', ['tenant_id', 'is_active'], unique=False)
    op.create_index('idx_user_tenant_email', 'user', ['tenant_id', 'email'], unique=False)
    op.create_index('idx_user_tenant_role', 'user', ['tenant_id', 'role'], unique=False)
    op.create_index(op.f('ix_user_full_name'), 'user', ['full_name'], unique=False)
    op.create_index(op.f('ix_user_is_active'), 'user', ['is_active'], unique=False)
    op.create_index(op.f('ix_user_is_superuser'), 'user', ['is_superuser'], unique=False)
    op.create_index(op.f('ix_user_last_login_at'), 'user', ['last_login_at'], unique=False)
    op.create_index(op.f('ix_user_role'), 'user', ['role'], unique=False)
    op.create_index(op.f('ix_user_tenant_id'), 'user', ['tenant_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_tenant_id'), table_name='user')
    op.drop_index(op.f('ix_user_role'), table_name='user')
    op.drop_index(op.f('ix_user_last_login_at'), table_name='user')
    op.drop_index(op.f('ix_user_is_superuser'), table_name='user')
    op.drop_index(op.f('ix_user_is_active'), table_name='user')
    op.drop_index(op.f('ix_user_full_name'), table_name='user')
    op.drop_index('idx_user_tenant_role', table_name='user')
    op.drop_index('idx_user_tenant_email', table_name='user')
    op.drop_index('idx_user_tenant_active', table_name='user')
    op.drop_index('idx_user_last_login', table_name='user')
    op.create_index('ix_user_email', 'user', ['email'], unique=True)
    op.alter_column('user', 'tenant_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_column('user', 'login_count')
    op.drop_column('user', 'last_login_at')
    op.drop_index(op.f('ix_tenant_status'), table_name='tenant')
    op.drop_index(op.f('ix_tenant_name'), table_name='tenant')
    op.drop_index(op.f('ix_tenant_created_at'), table_name='tenant')
    op.drop_index('idx_tenant_status_created', table_name='tenant')
    op.drop_index('idx_tenant_code_status', table_name='tenant')
    op.drop_column('tenant', 'features_enabled')
    op.drop_column('tenant', 'max_storage_gb')
    op.drop_column('tenant', 'max_users')
    op.drop_constraint(None, 'item', type_='foreignkey')
    op.drop_constraint(None, 'item', type_='foreignkey')
    op.create_foreign_key('item_owner_id_fkey', 'item', 'user', ['owner_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_item_updated_at'), table_name='item')
    op.drop_index(op.f('ix_item_title'), table_name='item')
    op.drop_index(op.f('ix_item_tenant_id'), table_name='item')
    op.drop_index(op.f('ix_item_owner_id'), table_name='item')
    op.drop_index(op.f('ix_item_created_at'), table_name='item')
    op.drop_index('idx_item_title_tenant', table_name='item')
    op.drop_index('idx_item_tenant_owner', table_name='item')
    op.drop_index('idx_item_tenant_created', table_name='item')
    op.alter_column('item', 'description',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=1000),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.drop_column('item', 'tenant_id')
    op.drop_column('item', 'updated_at')
    op.drop_column('item', 'created_at')
    op.create_table('auditlog',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('action', postgresql.ENUM('CREATE', 'UPDATE', 'DELETE', 'VIEW', 'SEARCH', name='auditaction'), autoincrement=False, nullable=False),
    sa.Column('resource_type', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('resource_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('before_state', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('after_state', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('custom_metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('severity', postgresql.ENUM('INFO', 'WARNING', 'ERROR', 'CRITICAL', name='auditseverity'), autoincrement=False, nullable=False),
    sa.Column('tenant_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], name='auditlog_tenant_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='auditlog_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='auditlog_pkey')
    )
    op.drop_index(op.f('ix_audit_log_user_id'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_timestamp'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_tenant_id'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_severity'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_session_id'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_resource_type'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_resource_id'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_ip_address'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_action'), table_name='audit_log')
    op.drop_index('idx_audit_timestamp_partition', table_name='audit_log')
    op.drop_index('idx_audit_tenant_user', table_name='audit_log')
    op.drop_index('idx_audit_tenant_timestamp_partition', table_name='audit_log')
    op.drop_index('idx_audit_tenant_timestamp', table_name='audit_log')
    op.drop_index('idx_audit_tenant_severity', table_name='audit_log')
    op.drop_index('idx_audit_tenant_resource', table_name='audit_log')
    op.drop_index('idx_audit_tenant_action', table_name='audit_log')
    op.drop_table('audit_log')
    op.drop_index(op.f('ix_tenant_metrics_tenant_id'), table_name='tenant_metrics')
    op.drop_index(op.f('ix_tenant_metrics_date'), table_name='tenant_metrics')
    op.drop_index('idx_tenant_metrics_date', table_name='tenant_metrics')
    op.drop_table('tenant_metrics')
    # ### end Alembic commands ###
